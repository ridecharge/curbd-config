{
  "base-ansible-role": {
    "repo": "ridecharge/base-ansible-role",
    "branch": "master",
    "cmd": "true",
    "downstreams": "base-curbix"
  },
  "java-ansible-role": {
    "repo": "ridecharge/java-ansible-role",
    "branch": "master",
    "cmd": "true",
    "downstreams": "jenkins-docker"
  },
  "jenkins-ansible-role": {
    "repo": "ridecharge/jenkins-ansible-role",
    "branch": "master",
    "cmd": "true",
    "downstreams": "jenkins-docker"
  },
  "python3-ansible-role": {
    "repo": "ridecharge/python3-ansible-role",
    "branch": "master",
    "cmd": "true",
    "downstreams": "jenkins-docker,aws-startup-utils-docker,consul-docker,curbd,curbformation"
  },
  "logging-ansible-role": {
    "repo": "ridecharge/logging-ansible-role",
    "branch": "master",
    "cmd": "true",
    "downstreams": "logging-docker"
  },
  "ntp-ansible-role": {
    "repo": "ridecharge/ntp-ansible-role",
    "branch": "master",
    "cmd": "true",
    "downstreams": "ntp-curbix"
  },
  "nat-ansible-role": {
    "repo": "ridecharge/nat-ansible-role",
    "branch": "master",
    "cmd": "true",
    "downstreams": "nat-curbix"
  },
  "curbd-config-private-populate": {
    "cmd": [
      "ENVIRONMENT=$(curl http://consul.gocurb.internal/v1/kv/cf/config/environment?raw)",
      "docker run --link consul:consul registry.gocurb.internal:80/curbd-config-private -e $ENVIRONMENT"
    ]
  },
  "curbd-config-populate": {
    "cmd": [
      "ENVIRONMENT=$(curl http://consul.gocurb.internal/v1/kv/cf/config/environment?raw)",
      "docker run --link consul:consul registry.gocurb.internal:80/curbd-config -e $ENVIRONMENT"
    ]
  },
  "curbformation-templates-create": {
    "cmd": "docker run --link consul:consul registry.gocurb.internal:80/curbformation-templates create -n $name -v $version",
    "parameters": "name,version",
    "blockOn": "curbformation-templates"
  },
  "curbformation-templates-deploy": {
    "cmd": "docker run --link consul:consul registry.gocurb.internal:80/curbformation-templates deploy -n $name -v $version",
    "parameters": "name,version",
    "blockOn": "curbformation-templates"
  },
  "curbformation-templates-redeploy": {
    "cmd": "docker run --link consul:consul registry.gocurb.internal:80/curbformation-templates deploy -n $name",
    "parameters": "name",
    "blockOn": "curbformation-templates"
  },
  "curbformation-templates-rollback": {
    "cmd": "docker run --link consul:consul registry.gocurb.internal:80/curbformation-templates deploy -n $name --rollback",
    "parameters": "name",
    "blockOn": "curbformation-templates"
  },
  "curbformation-templates-commit": {
    "cmd": "docker run --link consul:consul registry.gocurb.internal:80/curbformation-templates deploy -n $name --commit",
    "parameters": "name",
    "blockOn": "curbformation-templates"
  },
  "curbformation-templates-lock": {
    "cmd": "docker run --link consul:consul registry.gocurb.internal:80/curbformation-templates lock -n $name",
    "parameters": "name",
    "blockOn": "curbformation-templates"
  },
  "curbformation-templates-unlock": {
    "cmd": "docker run --link consul:consul registry.gocurb.internal:80/curbformation-templates unlock -n $name",
    "parameters": "name",
    "blockOn": "curbformation-templates"
  }
}
